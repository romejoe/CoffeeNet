// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx-operators_ONNX_NAMESPACE-ml.proto

#ifndef PROTOBUF_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto__INCLUDED
#define PROTOBUF_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "onnx_ONNX_NAMESPACE-ml.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsOperatorProtoImpl();
void InitDefaultsOperatorProto();
void InitDefaultsOperatorSetProtoImpl();
void InitDefaultsOperatorSetProto();
inline void InitDefaults() {
  InitDefaultsOperatorProto();
  InitDefaultsOperatorSetProto();
}
}  // namespace protobuf_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto
namespace onnx {
class OperatorProto;
class OperatorProtoDefaultTypeInternal;
extern OperatorProtoDefaultTypeInternal _OperatorProto_default_instance_;
class OperatorSetProto;
class OperatorSetProtoDefaultTypeInternal;
extern OperatorSetProtoDefaultTypeInternal _OperatorSetProto_default_instance_;
}  // namespace onnx
namespace onnx {

enum OperatorProto_OperatorStatus {
  OperatorProto_OperatorStatus_EXPERIMENTAL = 0,
  OperatorProto_OperatorStatus_STABLE = 1
};
bool OperatorProto_OperatorStatus_IsValid(int value);
const OperatorProto_OperatorStatus OperatorProto_OperatorStatus_OperatorStatus_MIN = OperatorProto_OperatorStatus_EXPERIMENTAL;
const OperatorProto_OperatorStatus OperatorProto_OperatorStatus_OperatorStatus_MAX = OperatorProto_OperatorStatus_STABLE;
const int OperatorProto_OperatorStatus_OperatorStatus_ARRAYSIZE = OperatorProto_OperatorStatus_OperatorStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperatorProto_OperatorStatus_descriptor();
inline const ::std::string& OperatorProto_OperatorStatus_Name(OperatorProto_OperatorStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperatorProto_OperatorStatus_descriptor(), value);
}
inline bool OperatorProto_OperatorStatus_Parse(
    const ::std::string& name, OperatorProto_OperatorStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperatorProto_OperatorStatus>(
    OperatorProto_OperatorStatus_descriptor(), name, value);
}
// ===================================================================

class OperatorProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onnx.OperatorProto) */ {
 public:
  OperatorProto();
  virtual ~OperatorProto();

  OperatorProto(const OperatorProto& from);

  inline OperatorProto& operator=(const OperatorProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperatorProto(OperatorProto&& from) noexcept
    : OperatorProto() {
    *this = ::std::move(from);
  }

  inline OperatorProto& operator=(OperatorProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperatorProto* internal_default_instance() {
    return reinterpret_cast<const OperatorProto*>(
               &_OperatorProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OperatorProto* other);
  friend void swap(OperatorProto& a, OperatorProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperatorProto* New() const PROTOBUF_FINAL { return New(NULL); }

  OperatorProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperatorProto& from);
  void MergeFrom(const OperatorProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperatorProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OperatorProto_OperatorStatus OperatorStatus;
  static const OperatorStatus EXPERIMENTAL =
    OperatorProto_OperatorStatus_EXPERIMENTAL;
  static const OperatorStatus STABLE =
    OperatorProto_OperatorStatus_STABLE;
  static inline bool OperatorStatus_IsValid(int value) {
    return OperatorProto_OperatorStatus_IsValid(value);
  }
  static const OperatorStatus OperatorStatus_MIN =
    OperatorProto_OperatorStatus_OperatorStatus_MIN;
  static const OperatorStatus OperatorStatus_MAX =
    OperatorProto_OperatorStatus_OperatorStatus_MAX;
  static const int OperatorStatus_ARRAYSIZE =
    OperatorProto_OperatorStatus_OperatorStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OperatorStatus_descriptor() {
    return OperatorProto_OperatorStatus_descriptor();
  }
  static inline const ::std::string& OperatorStatus_Name(OperatorStatus value) {
    return OperatorProto_OperatorStatus_Name(value);
  }
  static inline bool OperatorStatus_Parse(const ::std::string& name,
      OperatorStatus* value) {
    return OperatorProto_OperatorStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string op_type = 1;
  bool has_op_type() const;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  const ::std::string& op_type() const;
  void set_op_type(const ::std::string& value);
  #if LANG_CXX11
  void set_op_type(::std::string&& value);
  #endif
  void set_op_type(const char* value);
  void set_op_type(const char* value, size_t size);
  ::std::string* mutable_op_type();
  ::std::string* release_op_type();
  void set_allocated_op_type(::std::string* op_type);

  // optional string doc_string = 10;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 10;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  #if LANG_CXX11
  void set_doc_string(::std::string&& value);
  #endif
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // optional int64 since_version = 2;
  bool has_since_version() const;
  void clear_since_version();
  static const int kSinceVersionFieldNumber = 2;
  ::google::protobuf::int64 since_version() const;
  void set_since_version(::google::protobuf::int64 value);

  // optional .onnx.OperatorProto.OperatorStatus status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::onnx::OperatorProto_OperatorStatus status() const;
  void set_status(::onnx::OperatorProto_OperatorStatus value);

  // @@protoc_insertion_point(class_scope:onnx.OperatorProto)
 private:
  void set_has_op_type();
  void clear_has_op_type();
  void set_has_since_version();
  void clear_has_since_version();
  void set_has_status();
  void clear_has_status();
  void set_has_doc_string();
  void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr op_type_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::google::protobuf::int64 since_version_;
  int status_;
  friend struct ::protobuf_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto::TableStruct;
  friend void ::protobuf_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto::InitDefaultsOperatorProtoImpl();
};
// -------------------------------------------------------------------

class OperatorSetProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onnx.OperatorSetProto) */ {
 public:
  OperatorSetProto();
  virtual ~OperatorSetProto();

  OperatorSetProto(const OperatorSetProto& from);

  inline OperatorSetProto& operator=(const OperatorSetProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OperatorSetProto(OperatorSetProto&& from) noexcept
    : OperatorSetProto() {
    *this = ::std::move(from);
  }

  inline OperatorSetProto& operator=(OperatorSetProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorSetProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OperatorSetProto* internal_default_instance() {
    return reinterpret_cast<const OperatorSetProto*>(
               &_OperatorSetProto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(OperatorSetProto* other);
  friend void swap(OperatorSetProto& a, OperatorSetProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OperatorSetProto* New() const PROTOBUF_FINAL { return New(NULL); }

  OperatorSetProto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OperatorSetProto& from);
  void MergeFrom(const OperatorSetProto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OperatorSetProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .onnx.OperatorProto operator = 8;
  int operator__size() const;
  void clear_operator_();
  static const int kOperatorFieldNumber = 8;
  const ::onnx::OperatorProto& operator_(int index) const;
  ::onnx::OperatorProto* mutable_operator_(int index);
  ::onnx::OperatorProto* add_operator_();
  ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >*
      mutable_operator_();
  const ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >&
      operator_() const;

  // optional string magic = 1;
  bool has_magic() const;
  void clear_magic();
  static const int kMagicFieldNumber = 1;
  const ::std::string& magic() const;
  void set_magic(const ::std::string& value);
  #if LANG_CXX11
  void set_magic(::std::string&& value);
  #endif
  void set_magic(const char* value);
  void set_magic(const char* value, size_t size);
  ::std::string* mutable_magic();
  ::std::string* release_magic();
  void set_allocated_magic(::std::string* magic);

  // optional string ir_version_prerelease = 3;
  bool has_ir_version_prerelease() const;
  void clear_ir_version_prerelease();
  static const int kIrVersionPrereleaseFieldNumber = 3;
  const ::std::string& ir_version_prerelease() const;
  void set_ir_version_prerelease(const ::std::string& value);
  #if LANG_CXX11
  void set_ir_version_prerelease(::std::string&& value);
  #endif
  void set_ir_version_prerelease(const char* value);
  void set_ir_version_prerelease(const char* value, size_t size);
  ::std::string* mutable_ir_version_prerelease();
  ::std::string* release_ir_version_prerelease();
  void set_allocated_ir_version_prerelease(::std::string* ir_version_prerelease);

  // optional string domain = 4;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 4;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional string doc_string = 6;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 6;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  #if LANG_CXX11
  void set_doc_string(::std::string&& value);
  #endif
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // optional string ir_build_metadata = 7;
  bool has_ir_build_metadata() const;
  void clear_ir_build_metadata();
  static const int kIrBuildMetadataFieldNumber = 7;
  const ::std::string& ir_build_metadata() const;
  void set_ir_build_metadata(const ::std::string& value);
  #if LANG_CXX11
  void set_ir_build_metadata(::std::string&& value);
  #endif
  void set_ir_build_metadata(const char* value);
  void set_ir_build_metadata(const char* value, size_t size);
  ::std::string* mutable_ir_build_metadata();
  ::std::string* release_ir_build_metadata();
  void set_allocated_ir_build_metadata(::std::string* ir_build_metadata);

  // optional int64 opset_version = 5;
  bool has_opset_version() const;
  void clear_opset_version();
  static const int kOpsetVersionFieldNumber = 5;
  ::google::protobuf::int64 opset_version() const;
  void set_opset_version(::google::protobuf::int64 value);

  // optional int32 ir_version = 2;
  bool has_ir_version() const;
  void clear_ir_version();
  static const int kIrVersionFieldNumber = 2;
  ::google::protobuf::int32 ir_version() const;
  void set_ir_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:onnx.OperatorSetProto)
 private:
  void set_has_magic();
  void clear_has_magic();
  void set_has_ir_version();
  void clear_has_ir_version();
  void set_has_ir_version_prerelease();
  void clear_has_ir_version_prerelease();
  void set_has_ir_build_metadata();
  void clear_has_ir_build_metadata();
  void set_has_domain();
  void clear_has_domain();
  void set_has_opset_version();
  void clear_has_opset_version();
  void set_has_doc_string();
  void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto > operator__;
  ::google::protobuf::internal::ArenaStringPtr magic_;
  ::google::protobuf::internal::ArenaStringPtr ir_version_prerelease_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::google::protobuf::internal::ArenaStringPtr ir_build_metadata_;
  ::google::protobuf::int64 opset_version_;
  ::google::protobuf::int32 ir_version_;
  friend struct ::protobuf_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto::TableStruct;
  friend void ::protobuf_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto::InitDefaultsOperatorSetProtoImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OperatorProto

// optional string op_type = 1;
inline bool OperatorProto::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperatorProto::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperatorProto::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperatorProto::clear_op_type() {
  op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_type();
}
inline const ::std::string& OperatorProto::op_type() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.op_type)
  return op_type_.GetNoArena();
}
inline void OperatorProto::set_op_type(const ::std::string& value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.op_type)
}
#if LANG_CXX11
inline void OperatorProto::set_op_type(::std::string&& value) {
  set_has_op_type();
  op_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorProto.op_type)
}
#endif
inline void OperatorProto::set_op_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorProto.op_type)
}
inline void OperatorProto::set_op_type(const char* value, size_t size) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorProto.op_type)
}
inline ::std::string* OperatorProto::mutable_op_type() {
  set_has_op_type();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.op_type)
  return op_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorProto::release_op_type() {
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.op_type)
  clear_has_op_type();
  return op_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorProto::set_allocated_op_type(::std::string* op_type) {
  if (op_type != NULL) {
    set_has_op_type();
  } else {
    clear_has_op_type();
  }
  op_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_type);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.op_type)
}

// optional int64 since_version = 2;
inline bool OperatorProto::has_since_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperatorProto::set_has_since_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperatorProto::clear_has_since_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperatorProto::clear_since_version() {
  since_version_ = GOOGLE_LONGLONG(0);
  clear_has_since_version();
}
inline ::google::protobuf::int64 OperatorProto::since_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.since_version)
  return since_version_;
}
inline void OperatorProto::set_since_version(::google::protobuf::int64 value) {
  set_has_since_version();
  since_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.since_version)
}

// optional .onnx.OperatorProto.OperatorStatus status = 3;
inline bool OperatorProto::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperatorProto::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperatorProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperatorProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::onnx::OperatorProto_OperatorStatus OperatorProto::status() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.status)
  return static_cast< ::onnx::OperatorProto_OperatorStatus >(status_);
}
inline void OperatorProto::set_status(::onnx::OperatorProto_OperatorStatus value) {
  assert(::onnx::OperatorProto_OperatorStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.status)
}

// optional string doc_string = 10;
inline bool OperatorProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperatorProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperatorProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperatorProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& OperatorProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.doc_string)
  return doc_string_.GetNoArena();
}
inline void OperatorProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.doc_string)
}
#if LANG_CXX11
inline void OperatorProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorProto.doc_string)
}
#endif
inline void OperatorProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorProto.doc_string)
}
inline void OperatorProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorProto.doc_string)
}
inline ::std::string* OperatorProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.doc_string)
}

// -------------------------------------------------------------------

// OperatorSetProto

// optional string magic = 1;
inline bool OperatorSetProto::has_magic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperatorSetProto::set_has_magic() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperatorSetProto::clear_has_magic() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperatorSetProto::clear_magic() {
  magic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_magic();
}
inline const ::std::string& OperatorSetProto::magic() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.magic)
  return magic_.GetNoArena();
}
inline void OperatorSetProto::set_magic(const ::std::string& value) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.magic)
}
#if LANG_CXX11
inline void OperatorSetProto::set_magic(::std::string&& value) {
  set_has_magic();
  magic_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorSetProto.magic)
}
#endif
inline void OperatorSetProto::set_magic(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.magic)
}
inline void OperatorSetProto::set_magic(const char* value, size_t size) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.magic)
}
inline ::std::string* OperatorSetProto::mutable_magic() {
  set_has_magic();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.magic)
  return magic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_magic() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.magic)
  clear_has_magic();
  return magic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_magic(::std::string* magic) {
  if (magic != NULL) {
    set_has_magic();
  } else {
    clear_has_magic();
  }
  magic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), magic);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.magic)
}

// optional int32 ir_version = 2;
inline bool OperatorSetProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OperatorSetProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OperatorSetProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OperatorSetProto::clear_ir_version() {
  ir_version_ = 0;
  clear_has_ir_version();
}
inline ::google::protobuf::int32 OperatorSetProto::ir_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version)
  return ir_version_;
}
inline void OperatorSetProto::set_ir_version(::google::protobuf::int32 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version)
}

// optional string ir_version_prerelease = 3;
inline bool OperatorSetProto::has_ir_version_prerelease() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperatorSetProto::set_has_ir_version_prerelease() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperatorSetProto::clear_has_ir_version_prerelease() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperatorSetProto::clear_ir_version_prerelease() {
  ir_version_prerelease_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ir_version_prerelease();
}
inline const ::std::string& OperatorSetProto::ir_version_prerelease() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version_prerelease)
  return ir_version_prerelease_.GetNoArena();
}
inline void OperatorSetProto::set_ir_version_prerelease(const ::std::string& value) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version_prerelease)
}
#if LANG_CXX11
inline void OperatorSetProto::set_ir_version_prerelease(::std::string&& value) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorSetProto.ir_version_prerelease)
}
#endif
inline void OperatorSetProto::set_ir_version_prerelease(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.ir_version_prerelease)
}
inline void OperatorSetProto::set_ir_version_prerelease(const char* value, size_t size) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.ir_version_prerelease)
}
inline ::std::string* OperatorSetProto::mutable_ir_version_prerelease() {
  set_has_ir_version_prerelease();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_version_prerelease)
  return ir_version_prerelease_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_ir_version_prerelease() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_version_prerelease)
  clear_has_ir_version_prerelease();
  return ir_version_prerelease_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_ir_version_prerelease(::std::string* ir_version_prerelease) {
  if (ir_version_prerelease != NULL) {
    set_has_ir_version_prerelease();
  } else {
    clear_has_ir_version_prerelease();
  }
  ir_version_prerelease_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ir_version_prerelease);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_version_prerelease)
}

// optional string ir_build_metadata = 7;
inline bool OperatorSetProto::has_ir_build_metadata() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OperatorSetProto::set_has_ir_build_metadata() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OperatorSetProto::clear_has_ir_build_metadata() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OperatorSetProto::clear_ir_build_metadata() {
  ir_build_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ir_build_metadata();
}
inline const ::std::string& OperatorSetProto::ir_build_metadata() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_build_metadata)
  return ir_build_metadata_.GetNoArena();
}
inline void OperatorSetProto::set_ir_build_metadata(const ::std::string& value) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_build_metadata)
}
#if LANG_CXX11
inline void OperatorSetProto::set_ir_build_metadata(::std::string&& value) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorSetProto.ir_build_metadata)
}
#endif
inline void OperatorSetProto::set_ir_build_metadata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.ir_build_metadata)
}
inline void OperatorSetProto::set_ir_build_metadata(const char* value, size_t size) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.ir_build_metadata)
}
inline ::std::string* OperatorSetProto::mutable_ir_build_metadata() {
  set_has_ir_build_metadata();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_build_metadata)
  return ir_build_metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_ir_build_metadata() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_build_metadata)
  clear_has_ir_build_metadata();
  return ir_build_metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_ir_build_metadata(::std::string* ir_build_metadata) {
  if (ir_build_metadata != NULL) {
    set_has_ir_build_metadata();
  } else {
    clear_has_ir_build_metadata();
  }
  ir_build_metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ir_build_metadata);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_build_metadata)
}

// optional string domain = 4;
inline bool OperatorSetProto::has_domain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperatorSetProto::set_has_domain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperatorSetProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperatorSetProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
inline const ::std::string& OperatorSetProto::domain() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.domain)
  return domain_.GetNoArena();
}
inline void OperatorSetProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.domain)
}
#if LANG_CXX11
inline void OperatorSetProto::set_domain(::std::string&& value) {
  set_has_domain();
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorSetProto.domain)
}
#endif
inline void OperatorSetProto::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.domain)
}
inline void OperatorSetProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.domain)
}
inline ::std::string* OperatorSetProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_domain() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.domain)
}

// optional int64 opset_version = 5;
inline bool OperatorSetProto::has_opset_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OperatorSetProto::set_has_opset_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OperatorSetProto::clear_has_opset_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OperatorSetProto::clear_opset_version() {
  opset_version_ = GOOGLE_LONGLONG(0);
  clear_has_opset_version();
}
inline ::google::protobuf::int64 OperatorSetProto::opset_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.opset_version)
  return opset_version_;
}
inline void OperatorSetProto::set_opset_version(::google::protobuf::int64 value) {
  set_has_opset_version();
  opset_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.opset_version)
}

// optional string doc_string = 6;
inline bool OperatorSetProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperatorSetProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperatorSetProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperatorSetProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& OperatorSetProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.doc_string)
  return doc_string_.GetNoArena();
}
inline void OperatorSetProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.doc_string)
}
#if LANG_CXX11
inline void OperatorSetProto::set_doc_string(::std::string&& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:onnx.OperatorSetProto.doc_string)
}
#endif
inline void OperatorSetProto::set_doc_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.doc_string)
}
inline void OperatorSetProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.doc_string)
}
inline ::std::string* OperatorSetProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.doc_string)
}

// repeated .onnx.OperatorProto operator = 8;
inline int OperatorSetProto::operator__size() const {
  return operator__.size();
}
inline void OperatorSetProto::clear_operator_() {
  operator__.Clear();
}
inline const ::onnx::OperatorProto& OperatorSetProto::operator_(int index) const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.operator)
  return operator__.Get(index);
}
inline ::onnx::OperatorProto* OperatorSetProto::mutable_operator_(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.operator)
  return operator__.Mutable(index);
}
inline ::onnx::OperatorProto* OperatorSetProto::add_operator_() {
  // @@protoc_insertion_point(field_add:onnx.OperatorSetProto.operator)
  return operator__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >*
OperatorSetProto::mutable_operator_() {
  // @@protoc_insertion_point(field_mutable_list:onnx.OperatorSetProto.operator)
  return &operator__;
}
inline const ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >&
OperatorSetProto::operator_() const {
  // @@protoc_insertion_point(field_list:onnx.OperatorSetProto.operator)
  return operator__;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace onnx

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::onnx::OperatorProto_OperatorStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onnx::OperatorProto_OperatorStatus>() {
  return ::onnx::OperatorProto_OperatorStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_onnx_2doperators_5fONNX_5fNAMESPACE_2dml_2eproto__INCLUDED
